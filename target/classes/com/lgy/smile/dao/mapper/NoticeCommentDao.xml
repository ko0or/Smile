<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lgy.smile.dao.NoticeCommentMapperinterface">

<!--     <select id="getCount" resultType="int"> -->
 <!--         SELECT count(*) FROM comment_notice -->
<!--           SELECT COUNT(comment.content)  -->
<!-- FROM smile.board_notice board, smile.comment_notice comment -->
<!-- WHERE board.identity = #{identity} -->
<!--     </select> -->
    <insert id="writecomment" parameterType="hashmap">
    insert into comment_notice values(
			null , #{content} , #{created} , #{user} , #{board} , 
			(SELECT IFNULL(MAX(comment.group)+1 , 0) FROM board_notice board, comment_notice comment WHERE board.identity =  #{board} AND board.identity = comment.board) 
               , 0 , 0
            )
		)
<!--     insert into comment_notice(identity, content, created, user,board) values( -->
<!-- 			null , #{content} , #{created} , #{user} , #{board} -->
<!-- 		) -->

    </insert>
     <select id="contentViewcomment" parameterType="hashmap" resultType="com.lgy.smile.dto.NoticeCommentDto">
		SELECT 
			user.nickname ,
		    comment.*
		FROM 
			smile.board_notice board ,
		    smile.comment_notice comment , 
		    smile.user user
		WHERE
			board.identity = #{identity}
			AND board.identity = comment.board
		    AND user.identity = comment.user
		 ORDER BY
			comment.group,
		    comment.index

<!-- 				SELECT  -->
<!-- 			comment.* -->
<!-- 		FROM  -->
<!-- 			smile.comment_notice comment -->
<!-- 			, smile.board_notice board -->
<!-- 		WHERE -->
<!-- 			board.identity = #{identity} -->
<!-- 		    AND board.identity = comment.board -->
<!-- 		ORDER BY -->
<!-- 		    comment.group -->
<!-- 		    , comment.identity  -->
<!-- 		; -->
    </select>
    
    <update id="modifycomment" parameterType="hashmap">
		update comment_notice set content = #{content} 
		 where identity=#{identity}
    </update>
    
    <delete id="deletecomment" parameterType="hashmap">
		delete from comment_notice where identity=#{identity}
    </delete>
   
   	<update id="orignalindexcomment" parameterType="hashmap">
   		UPDATE 
		comment_notice comment
	SET 
		comment.index = comment.index+1
	WHERE 
		( comment.board = #{board} AND comment.group = #{group} )
	    AND comment.index > #{index} ;
   	</update>
    
    <insert id="replaycomment" parameterType="hashmap">
     INSERT INTO comment_notice (identity, content, created, user, board, `group`, `index`, target_user)
VALUES (
    null, 
    #{content}, 
    #{created}, 
    #{user}, 
    #{board},
    #{group}, 
    IFNULL(#{index}+1, 0), 
    #{target_user}
);

    </insert>
    
</mapper>