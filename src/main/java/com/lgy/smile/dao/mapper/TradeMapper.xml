<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgy.smile.dao.TradeMapperInterface">

<!-- {imgFile=화면 캡처 2023-04-19 125309.png, =teng, content=<p>teng222</p>, files=, price=3300, address=충남 서천군 서면 갯벌체험로 56-45} -->
<!-- insert into smile.board_trade values(null, 'teng', 'teng1234', sysdate(), 'contacted' , 'c:/dev/', 'wait', 5000, '부산광역시 진구 무슨무슨대로 342번길 32길', 3);  	 -->
  	<insert id="write" parameterType="hashmap">
	    INSERT INTO board_trade VALUES (
	    	null , #{title} , #{content} , #{created} , #{contacted} , #{imgPath}, 'wait', #{price} , #{address} , #{user}
	    )
  	</insert>

<!-- 	LIMIT ${start}, 5 : start 변수 + 5개씩 화면단에 보여줌 -->
  	<select id="list" resultType="com.lgy.smile.dto.TradeDto" parameterType="hashmap">
		SELECT 
			board.identity, board.title, board.content, board.created, board.contacted, board.imgPath, board.status, FORMAT(board.price, 0) "price", board.address, board.user 
		FROM 
			smile.board_trade board,
			smile.user user
		WHERE 
			(user.nickname LIKE '%${searchByNickname}%' AND board.identity LIKE '%${searchByBoardIdentity}%')
			AND board.user = user.identity
		ORDER BY 
			identity DESC
		LIMIT 
			${start}, 5
  	</select>

<!-- 	select이고 한줄 보여줄거라서 ArrayList로 안하고 TradeDto로-->
  	<select id="contentView" parameterType="hashmap" resultType="com.lgy.smile.dto.TradeDto">
        SELECT identity, title, content, created, contacted, imgPath, status, FORMAT(price, 0) "price", address, user 
        	from board_trade where identity=#{identity}
    </select>
  	
  	<update id="modify" parameterType="hashmap">
		UPDATE board_trade SET title = #{title}, content = #{content}, price = #{price}, contacted = #{contacted}, address = #{address}
			where identity=#{identity}
			
    </update>

  	<update id="modifyWithImgPath" parameterType="hashmap">
		UPDATE board_trade SET title = #{title}, content = #{content}, price = #{price}, imgPath = #{imgPath}, contacted = #{contacted}, address = #{address}
			where identity=#{identity}
    </update>
  	
  	<delete id="delete" parameterType="hashmap">
		DELETE from board_trade where identity=#{identity}
    </delete>
    
    <select id="telCheck" parameterType="hashmap" resultType="int">
		SELECT 
			COUNT(tel)
		FROM 
			smile.user
		WHERE 
			tel = ${tel}
		    AND identity = ${user}
    </select>
    
    
  	<update id="telUpdate" parameterType="hashmap">
		UPDATE 
			smile.user
		SET 
			tel = #{tel}
		WHERE
			identity = #{user}
    </update>
        
</mapper>
